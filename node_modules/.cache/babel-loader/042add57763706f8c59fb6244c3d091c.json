{"ast":null,"code":"import axios from 'axios';\nimport { SET_ALL_ARTICLES_BY_TAG } from '../constants/actionTypes';\nimport { store } from '../store';\nimport history from '../constants/history';\nexport const toggleLikeArticle = (slug, favorited) => {\n  let config = {\n    headers: {\n      Authorization: \"Token \".concat(store.getState().auth.currentUser.token)\n    }\n  };\n\n  if (favorited) {\n    return axios.delete(\"\".concat(baseURL, \"/articles/\").concat(slug, \"/favorite\"), config).then(response => {\n      return response.data.article;\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  return axios.post(\"\".concat(baseURL, \"/articles/\").concat(slug, \"/favorite\"), {}, config).then(response => {\n    return response.data.article;\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const createArticle = data => {\n  const title = data.title,\n        description = data.description,\n        body = data.body,\n        tags = data.tags;\n  let config = {\n    headers: {\n      Authorization: \"Token \".concat(store.getState().auth.currentUser.token)\n    }\n  };\n  return axios.post(\"\".concat(baseURL, \"/articles\"), {\n    article: {\n      title: title,\n      description: description,\n      body: body,\n      tagList: tags\n    }\n  }, config).then(response => {\n    history.push(\"/article/\".concat(response.data.article.slug));\n    return response.data.article;\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getArticlesByAuthor = data => {\n  const currentPage = 0;\n  return axios.get(\"\".concat(baseURL, \"/articles?author=\").concat(data, \"&limit=10&offset=\").concat(currentPage ? currentPage * 10 : 0)).then(response => {\n    return response.data;\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getUserFavoritedArticles = data => {\n  const currentPage = 0;\n  let config = {\n    headers: {\n      Authorization: \"Token \".concat(store.getState().auth.currentUser.token)\n    }\n  };\n  return axios.get(\"\".concat(baseURL, \"/articles/feed?limit=10&offset=\").concat(currentPage ? currentPage * 10 : 0), config).then(response => {\n    return response.data;\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getAllArticles = (currentPage, currentUser) => {\n  let config = currentUser ? {\n    headers: {\n      Authorization: \"Token \".concat(store.getState().auth.currentUser.token)\n    }\n  } : null;\n  return axios.get(\"\".concat(baseURL, \"/articles?limit=10&offset=\").concat(currentPage ? currentPage * 10 : 0), config).then(response => {\n    return response.data;\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const setAllArticlesByTags = data => {\n  return {\n    type: SET_ALL_ARTICLES_BY_TAG,\n    data\n  };\n};\nexport const getAllArticlesByTag = (tag, page) => {\n  return dispatch => {\n    return axios.get(\"\".concat(baseURL, \"/articles?tag=\").concat(tag, \"&limit=10&offset=\").concat(page ? page * 10 : 0)).then(response => {\n      dispatch(setAllArticlesByTags(response.data));\n    }).catch(error => {\n      throw error;\n    });\n  };\n};\nexport const getArticleByID = id => {\n  return axios.get(\"\".concat(baseURL, \"/articles/\").concat(id)).then(response => {\n    return response.data.article;\n  }).catch(error => {\n    throw error;\n  });\n};","map":{"version":3,"sources":["/home/jelly/Desktop/conduit_clone/src/actions/articles.js"],"names":["axios","SET_ALL_ARTICLES_BY_TAG","store","history","toggleLikeArticle","slug","favorited","config","headers","Authorization","getState","auth","currentUser","token","delete","baseURL","then","response","data","article","catch","error","post","createArticle","title","description","body","tags","tagList","push","getArticlesByAuthor","currentPage","get","getUserFavoritedArticles","getAllArticles","setAllArticlesByTags","type","getAllArticlesByTag","tag","page","dispatch","getArticleByID","id"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport { SET_ALL_ARTICLES_BY_TAG } from '../constants/actionTypes';\nimport { store } from '../store';\nimport history from '../constants/history';\n\nexport const toggleLikeArticle = (slug, favorited) => {\n  let config = {\n    headers: {\n      Authorization: `Token ${store.getState().auth.currentUser.token}`,\n    },\n  };\n  if (favorited) {\n    return axios\n      .delete(`${baseURL}/articles/${slug}/favorite`, config)\n      .then(response => {\n        return response.data.article;\n      })\n      .catch(error => {\n        throw error;\n      });\n  }\n  return axios\n    .post(`${baseURL}/articles/${slug}/favorite`, {}, config)\n    .then(response => {\n      return response.data.article;\n    })\n    .catch(error => {\n      throw error;\n    });\n};\n\nexport const createArticle = data => {\n  const { title, description, body, tags } = data;\n  let config = {\n    headers: {\n      Authorization: `Token ${store.getState().auth.currentUser.token}`,\n    },\n  };\n  return axios\n    .post(\n      `${baseURL}/articles`,\n      {\n        article: {\n          title: title,\n          description: description,\n          body: body,\n          tagList: tags,\n        },\n      },\n      config,\n    )\n    .then(response => {\n      history.push(`/article/${response.data.article.slug}`);\n      return response.data.article;\n    })\n    .catch(error => {\n      throw error;\n    });\n};\n\nexport const getArticlesByAuthor = data => {\n  const currentPage = 0;\n  return axios\n    .get(\n      `${baseURL}/articles?author=${data}&limit=10&offset=${\n        currentPage ? currentPage * 10 : 0\n      }`,\n    )\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      throw error;\n    });\n};\n\nexport const getUserFavoritedArticles = data => {\n  const currentPage = 0;\n  let config = {\n    headers: {\n      Authorization: `Token ${store.getState().auth.currentUser.token}`,\n    },\n  };\n  return axios\n    .get(\n      `${baseURL}/articles/feed?limit=10&offset=${\n        currentPage ? currentPage * 10 : 0\n      }`,\n      config,\n    )\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      throw error;\n    });\n};\n\nexport const getAllArticles = (currentPage, currentUser) => {\n  let config = currentUser\n    ? {\n        headers: {\n          Authorization: `Token ${store.getState().auth.currentUser.token}`,\n        },\n      }\n    : null;\n  return axios\n    .get(\n      `${baseURL}/articles?limit=10&offset=${\n        currentPage ? currentPage * 10 : 0\n      }`,\n      config,\n    )\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      throw error;\n    });\n};\n\nexport const setAllArticlesByTags = data => {\n  return {\n    type: SET_ALL_ARTICLES_BY_TAG,\n    data,\n  };\n};\nexport const getAllArticlesByTag = (tag, page) => {\n  return dispatch => {\n    return axios\n      .get(\n        `${baseURL}/articles?tag=${tag}&limit=10&offset=${\n          page ? page * 10 : 0\n        }`,\n      )\n      .then(response => {\n        dispatch(setAllArticlesByTags(response.data));\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n};\nexport const getArticleByID = id => {\n  return axios\n    .get(`${baseURL}/articles/${id}`)\n    .then(response => {\n      return response.data.article;\n    })\n    .catch(error => {\n      throw error;\n    });\n};\n"]},"metadata":{},"sourceType":"module"}