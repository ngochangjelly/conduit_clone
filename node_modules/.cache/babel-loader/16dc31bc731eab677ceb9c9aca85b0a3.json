{"ast":null,"code":"import axios from 'axios';\nimport { REMOVE_COMMENT } from '../constants/actionTypes';\nimport { store } from '../store';\nexport const dispatchRemoveComment = data => {\n  return {\n    type: REMOVE_COMMENT,\n    data\n  };\n};\nexport const removeComment = (articleID, commentID) => {\n  let config = {\n    headers: {\n      Authorization: \"Token \".concat(store.getState().auth.currentUser.token)\n    }\n  };\n  return axios.delete(\"\".concat(process.env.REACT_APP_API, \"/articles/\").concat(articleID, \"/comments/\").concat(commentID), config).then(res => {\n    return commentID;\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getCommentsByArticle = data => {\n  return axios.get(\"\".concat(process.env.REACT_APP_API, \"/articles/\").concat(data, \"/comments\")).then(response => {\n    return response.data.comments;\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const postComment = (id, data) => {\n  let config = {\n    headers: {\n      Authorization: \"Token \".concat(store.getState().auth.currentUser.token)\n    }\n  };\n  return axios.post(\"\".concat(process.env.REACT_APP_API, \"/articles/\").concat(id, \"/comments\"), {\n    comment: {\n      body: data\n    }\n  }, config).then(res => {\n    return res.data.comment;\n  }).catch(error => {\n    throw error;\n  });\n};","map":{"version":3,"sources":["/home/jelly/Desktop/conduit_clone/src/actions/comments.js"],"names":["axios","REMOVE_COMMENT","store","dispatchRemoveComment","data","type","removeComment","articleID","commentID","config","headers","Authorization","getState","auth","currentUser","token","delete","process","env","REACT_APP_API","then","res","catch","error","getCommentsByArticle","get","response","comments","postComment","id","post","comment","body"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAO,MAAMC,qBAAqB,GAAGC,IAAI,IAAI;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAEJ,cADD;AAELG,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,aAAa,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACrD,MAAIC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,kBAAWT,KAAK,CAACU,QAAN,GAAiBC,IAAjB,CAAsBC,WAAtB,CAAkCC,KAA7C;AADN;AADE,GAAb;AAKA,SAAOf,KAAK,CACTgB,MADI,WAGDC,OAAO,CAACC,GAAR,CAAYC,aAHX,uBAIUZ,SAJV,uBAIgCC,SAJhC,GAKHC,MALG,EAOJW,IAPI,CAOCC,GAAG,IAAI;AACX,WAAOb,SAAP;AACD,GATI,EAUJc,KAVI,CAUEC,KAAK,IAAI;AACd,UAAMA,KAAN;AACD,GAZI,CAAP;AAaD,CAnBM;AAoBP,OAAO,MAAMC,oBAAoB,GAAGpB,IAAI,IAAI;AAC1C,SAAOJ,KAAK,CACTyB,GADI,WACGR,OAAO,CAACC,GAAR,CAAYC,aADf,uBACyCf,IADzC,gBAEJgB,IAFI,CAECM,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACtB,IAAT,CAAcuB,QAArB;AACD,GAJI,EAKJL,KALI,CAKEC,KAAK,IAAI;AACd,UAAMA,KAAN;AACD,GAPI,CAAP;AAQD,CATM;AAUP,OAAO,MAAMK,WAAW,GAAG,CAACC,EAAD,EAAKzB,IAAL,KAAc;AACvC,MAAIK,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,kBAAWT,KAAK,CAACU,QAAN,GAAiBC,IAAjB,CAAsBC,WAAtB,CAAkCC,KAA7C;AADN;AADE,GAAb;AAKA,SAAOf,KAAK,CACT8B,IADI,WAEAb,OAAO,CAACC,GAAR,CAAYC,aAFZ,uBAEsCU,EAFtC,gBAGH;AAAEE,IAAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAE5B;AAAR;AAAX,GAHG,EAIHK,MAJG,EAMJW,IANI,CAMCC,GAAG,IAAI;AACX,WAAOA,GAAG,CAACjB,IAAJ,CAAS2B,OAAhB;AACD,GARI,EASJT,KATI,CASEC,KAAK,IAAI;AACd,UAAMA,KAAN;AACD,GAXI,CAAP;AAYD,CAlBM","sourcesContent":["import axios from 'axios';\n\nimport { REMOVE_COMMENT } from '../constants/actionTypes';\nimport { store } from '../store';\nexport const dispatchRemoveComment = data => {\n  return {\n    type: REMOVE_COMMENT,\n    data,\n  };\n};\n\nexport const removeComment = (articleID, commentID) => {\n  let config = {\n    headers: {\n      Authorization: `Token ${store.getState().auth.currentUser.token}`,\n    },\n  };\n  return axios\n    .delete(\n      `${\n        process.env.REACT_APP_API\n      }/articles/${articleID}/comments/${commentID}`,\n      config,\n    )\n    .then(res => {\n      return commentID;\n    })\n    .catch(error => {\n      throw error;\n    });\n};\nexport const getCommentsByArticle = data => {\n  return axios\n    .get(`${process.env.REACT_APP_API}/articles/${data}/comments`)\n    .then(response => {\n      return response.data.comments;\n    })\n    .catch(error => {\n      throw error;\n    });\n};\nexport const postComment = (id, data) => {\n  let config = {\n    headers: {\n      Authorization: `Token ${store.getState().auth.currentUser.token}`,\n    },\n  };\n  return axios\n    .post(\n      `${process.env.REACT_APP_API}/articles/${id}/comments`,\n      { comment: { body: data } },\n      config,\n    )\n    .then(res => {\n      return res.data.comment;\n    })\n    .catch(error => {\n      throw error;\n    });\n};\n"]},"metadata":{},"sourceType":"module"}