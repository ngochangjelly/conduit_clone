{"ast":null,"code":"var _jsxFileName = \"/home/jelly/Desktop/conduit_clone/src/components/ArticlePreviews.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleLikeArticle } from '../actions/articles';\nimport Pagination from './Pagination';\nimport ArticlePreview from './ArticlePreview';\nimport { FETCHING, FETCH_ERROR } from '../constants/fetchingStatus';\n\nconst ArticlePreviews = props => {\n  const articles = props.articles,\n        articlesCount = props.articlesCount,\n        currentUser = props.currentUser,\n        fetchingStatus = props.fetchingStatus;\n\n  const onToggleLike = article => {\n    toggleLikeArticle(article.slug, article.favorited).then(res => {\n      const newArticles = articles.map(i => i.slug === res.slug ? Object.assign({}, i, res) : i);\n      props.setArticles(newArticles);\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  if (fetchingStatus === FETCHING) return React.createElement(\"div\", {\n    className: \"text-gray-500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Loading...\");\n  if (fetchingStatus === FETCH_ERROR) return React.createElement(\"div\", {\n    className: \"text-gray-500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Articles are failed to load !\");\n  return articles && articles.length > 0 && React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, articles.map((article, key) => {\n    return React.createElement(ArticlePreview, {\n      key: key,\n      currentUser: currentUser,\n      article: article,\n      onToggleLike: onToggleLike,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }), React.createElement(Pagination, {\n    articlesCount: articlesCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(ArticlePreviews);","map":{"version":3,"sources":["/home/jelly/Desktop/conduit_clone/src/components/ArticlePreviews.js"],"names":["React","connect","toggleLikeArticle","Pagination","ArticlePreview","FETCHING","FETCH_ERROR","ArticlePreviews","props","articles","articlesCount","currentUser","fetchingStatus","onToggleLike","article","slug","favorited","then","res","newArticles","map","i","Object","assign","setArticles","catch","err","length","key","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,6BAAtC;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAA,QACvBC,QADuB,GACkCD,KADlC,CACvBC,QADuB;AAAA,QACbC,aADa,GACkCF,KADlC,CACbE,aADa;AAAA,QACEC,WADF,GACkCH,KADlC,CACEG,WADF;AAAA,QACeC,cADf,GACkCJ,KADlC,CACeI,cADf;;AAE/B,QAAMC,YAAY,GAAGC,OAAO,IAAI;AAC9BZ,IAAAA,iBAAiB,CAACY,OAAO,CAACC,IAAT,EAAeD,OAAO,CAACE,SAAvB,CAAjB,CACGC,IADH,CACQC,GAAG,IAAI;AACX,YAAMC,WAAW,GAAGV,QAAQ,CAACW,GAAT,CAAaC,CAAC,IAChCA,CAAC,CAACN,IAAF,KAAWG,GAAG,CAACH,IAAf,GAAsBO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,CAAlB,EAAqBH,GAArB,CAAtB,GAAkDG,CADhC,CAApB;AAGAb,MAAAA,KAAK,CAACgB,WAAN,CAAkBL,WAAlB;AACD,KANH,EAOGM,KAPH,CAOSC,GAAG,IAAI;AACZ,YAAMA,GAAN;AACD,KATH;AAUD,GAXD;;AAYA,MAAId,cAAc,KAAKP,QAAvB,EACE,OAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACF,MAAIO,cAAc,KAAKN,WAAvB,EACE,OAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AACF,SACEG,QAAQ,IACRA,QAAQ,CAACkB,MAAT,GAAkB,CADlB,IAEE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,QAAQ,CAACW,GAAT,CAAa,CAACN,OAAD,EAAUc,GAAV,KAAkB;AAC9B,WACE,oBAAC,cAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,WAAW,EAAEjB,WAFf;AAGE,MAAA,OAAO,EAAEG,OAHX;AAIE,MAAA,YAAY,EAAED,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATA,CADH,EAWE,oBAAC,UAAD;AAAY,IAAA,aAAa,EAAEH,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAHJ;AAkBD,CApCD;;AAqCA,MAAMmB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLnB,IAAAA,WAAW,EAAEmB,KAAK,CAACC,IAAN,CAAWpB;AADnB,GAAP;AAGD,CAJD;;AAKA,eAAeV,OAAO,CAAC4B,eAAD,CAAP,CAAyBtB,eAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { toggleLikeArticle } from '../actions/articles';\nimport Pagination from './Pagination';\nimport ArticlePreview from './ArticlePreview';\nimport { FETCHING, FETCH_ERROR } from '../constants/fetchingStatus';\n\nconst ArticlePreviews = props => {\n  const { articles, articlesCount, currentUser, fetchingStatus } = props;\n  const onToggleLike = article => {\n    toggleLikeArticle(article.slug, article.favorited)\n      .then(res => {\n        const newArticles = articles.map(i =>\n          i.slug === res.slug ? Object.assign({}, i, res) : i,\n        );\n        props.setArticles(newArticles);\n      })\n      .catch(err => {\n        throw err;\n      });\n  };\n  if (fetchingStatus === FETCHING)\n    return <div className=\"text-gray-500\">Loading...</div>;\n  if (fetchingStatus === FETCH_ERROR)\n    return <div className=\"text-gray-500\">Articles are failed to load !</div>;\n  return (\n    articles &&\n    articles.length > 0 && (\n      <div className=\"\">\n        {articles.map((article, key) => {\n          return (\n            <ArticlePreview\n              key={key}\n              currentUser={currentUser}\n              article={article}\n              onToggleLike={onToggleLike}\n            />\n          );\n        })}\n        <Pagination articlesCount={articlesCount} />\n      </div>\n    )\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser,\n  };\n};\nexport default connect(mapStateToProps)(ArticlePreviews);\n"]},"metadata":{},"sourceType":"module"}