{"ast":null,"code":"import _slicedToArray from \"/home/jelly/Desktop/conduit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jelly/Desktop/conduit_clone/src/components/Home/index.js\";\nimport { connect } from 'react-redux';\nimport React, { useState, useEffect } from 'react';\nimport Banner from './Banner';\nimport MainView from './MainView';\nimport Tags from './Tags';\nimport { GLOBAL_FEED, YOUR_FEED } from '../../constants/tabName';\nimport { getAllArticles, getUserFavoritedArticles } from '../../actions/articles';\nimport { FETCHING, FETCH_OK, FETCH_ERROR } from '../../constants/fetchingStatus';\n\nconst Home = props => {\n  const currentUser = props.currentUser;\n\n  const _useState = useState(GLOBAL_FEED),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentTab = _useState2[0],\n        setCurrentTab = _useState2[1];\n\n  const _useState3 = useState(FETCHING),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fetchingStatus = _useState4[0],\n        setFetchingStatus = _useState4[1];\n\n  const _useState5 = useState(FETCHING),\n        _useState6 = _slicedToArray(_useState5, 2),\n        articles = _useState6[0],\n        setArticles = _useState6[1];\n\n  const _useState7 = useState(undefined),\n        _useState8 = _slicedToArray(_useState7, 2),\n        articlesCount = _useState8[0],\n        setArticlesCount = _useState8[1];\n\n  useEffect(() => {\n    if (currentTab === GLOBAL_FEED) {\n      getAllArticles(currentUser).then(res => {\n        setArticles(res.articles);\n        setArticlesCount(res.articlesCount);\n        setFetchingStatus(FETCH_OK);\n      }).catch(err => {\n        setFetchingStatus(FETCH_ERROR);\n        throw err;\n      });\n    }\n\n    if (currentUser && currentTab === YOUR_FEED) {\n      getUserFavoritedArticles(currentUser.username).then(res => {\n        setArticles(res.articles);\n        setArticlesCount(res.articlesCount);\n        setFetchingStatus(FETCH_OK);\n      }).catch(() => {\n        setFetchingStatus(FETCH_ERROR);\n      });\n    }\n  }, [currentTab, currentUser]);\n  return React.createElement(\"div\", {\n    className: \"home-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, !props.currentUser && React.createElement(Banner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(MainView, {\n    articles: articles,\n    articlesCount: articlesCount,\n    setCurrentTab: setCurrentTab,\n    fetchingStatus: fetchingStatus,\n    currentTab: currentTab,\n    setArticles: setArticles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Tags, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/home/jelly/Desktop/conduit_clone/src/components/Home/index.js"],"names":["connect","React","useState","useEffect","Banner","MainView","Tags","GLOBAL_FEED","YOUR_FEED","getAllArticles","getUserFavoritedArticles","FETCHING","FETCH_OK","FETCH_ERROR","Home","props","currentUser","currentTab","setCurrentTab","fetchingStatus","setFetchingStatus","articles","setArticles","undefined","articlesCount","setArticlesCount","then","res","catch","err","username","mapStateToProps","state","auth"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,yBAAvC;AACA,SACEC,cADF,EAEEC,wBAFF,QAGO,wBAHP;AAIA,SACEC,QADF,EAEEC,QAFF,EAGEC,WAHF,QAIO,gCAJP;;AAMA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,QACZC,WADY,GACID,KADJ,CACZC,WADY;;AAAA,oBAEgBd,QAAQ,CAACK,WAAD,CAFxB;AAAA;AAAA,QAEbU,UAFa;AAAA,QAEDC,aAFC;;AAAA,qBAGwBhB,QAAQ,CAACS,QAAD,CAHhC;AAAA;AAAA,QAGbQ,cAHa;AAAA,QAGGC,iBAHH;;AAAA,qBAIYlB,QAAQ,CAACS,QAAD,CAJpB;AAAA;AAAA,QAIbU,QAJa;AAAA,QAIHC,WAJG;;AAAA,qBAKsBpB,QAAQ,CAACqB,SAAD,CAL9B;AAAA;AAAA,QAKbC,aALa;AAAA,QAKEC,gBALF;;AAOpBtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,UAAU,KAAKV,WAAnB,EAAgC;AAC9BE,MAAAA,cAAc,CAACO,WAAD,CAAd,CACGU,IADH,CACQC,GAAG,IAAI;AACXL,QAAAA,WAAW,CAACK,GAAG,CAACN,QAAL,CAAX;AACAI,QAAAA,gBAAgB,CAACE,GAAG,CAACH,aAAL,CAAhB;AACAJ,QAAAA,iBAAiB,CAACR,QAAD,CAAjB;AACD,OALH,EAMGgB,KANH,CAMSC,GAAG,IAAI;AACZT,QAAAA,iBAAiB,CAACP,WAAD,CAAjB;AACA,cAAMgB,GAAN;AACD,OATH;AAUD;;AACD,QAAIb,WAAW,IAAIC,UAAU,KAAKT,SAAlC,EAA6C;AAC3CE,MAAAA,wBAAwB,CAACM,WAAW,CAACc,QAAb,CAAxB,CACGJ,IADH,CACQC,GAAG,IAAI;AACXL,QAAAA,WAAW,CAACK,GAAG,CAACN,QAAL,CAAX;AACAI,QAAAA,gBAAgB,CAACE,GAAG,CAACH,aAAL,CAAhB;AACAJ,QAAAA,iBAAiB,CAACR,QAAD,CAAjB;AACD,OALH,EAMGgB,KANH,CAMS,MAAM;AACXR,QAAAA,iBAAiB,CAACP,WAAD,CAAjB;AACD,OARH;AASD;AACF,GAxBQ,EAwBN,CAACI,UAAD,EAAaD,WAAb,CAxBM,CAAT;AA0BA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACD,KAAK,CAACC,WAAP,IAAsB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzB,EAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEK,QADZ;AAEE,IAAA,aAAa,EAAEG,aAFjB;AAGE,IAAA,aAAa,EAAEN,aAHjB;AAIE,IAAA,cAAc,EAAEC,cAJlB;AAKE,IAAA,UAAU,EAAEF,UALd;AAME,IAAA,WAAW,EAAEK,WANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CAFF,CADF;AAkBD,CAnDD;;AAoDA,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLhB,IAAAA,WAAW,EAAEgB,KAAK,CAACC,IAAN,CAAWjB;AADnB,GAAP;AAGD,CAJD;;AAKA,eAAehB,OAAO,CAAC+B,eAAD,CAAP,CAAyBjB,IAAzB,CAAf","sourcesContent":["import { connect } from 'react-redux';\n\nimport React, { useState, useEffect } from 'react';\nimport Banner from './Banner';\nimport MainView from './MainView';\nimport Tags from './Tags';\nimport { GLOBAL_FEED, YOUR_FEED } from '../../constants/tabName';\nimport {\n  getAllArticles,\n  getUserFavoritedArticles,\n} from '../../actions/articles';\nimport {\n  FETCHING,\n  FETCH_OK,\n  FETCH_ERROR,\n} from '../../constants/fetchingStatus';\n\nconst Home = props => {\n  const { currentUser } = props;\n  const [currentTab, setCurrentTab] = useState(GLOBAL_FEED);\n  const [fetchingStatus, setFetchingStatus] = useState(FETCHING);\n  const [articles, setArticles] = useState(FETCHING);\n  const [articlesCount, setArticlesCount] = useState(undefined);\n\n  useEffect(() => {\n    if (currentTab === GLOBAL_FEED) {\n      getAllArticles(currentUser)\n        .then(res => {\n          setArticles(res.articles);\n          setArticlesCount(res.articlesCount);\n          setFetchingStatus(FETCH_OK);\n        })\n        .catch(err => {\n          setFetchingStatus(FETCH_ERROR);\n          throw err;\n        });\n    }\n    if (currentUser && currentTab === YOUR_FEED) {\n      getUserFavoritedArticles(currentUser.username)\n        .then(res => {\n          setArticles(res.articles);\n          setArticlesCount(res.articlesCount);\n          setFetchingStatus(FETCH_OK);\n        })\n        .catch(() => {\n          setFetchingStatus(FETCH_ERROR);\n        });\n    }\n  }, [currentTab, currentUser]);\n\n  return (\n    <div className=\"home-page\">\n      {!props.currentUser && <Banner />}\n      <div className=\"container page\">\n        <div className=\"row\">\n          <MainView\n            articles={articles}\n            articlesCount={articlesCount}\n            setCurrentTab={setCurrentTab}\n            fetchingStatus={fetchingStatus}\n            currentTab={currentTab}\n            setArticles={setArticles}\n          />\n          <Tags />\n        </div>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser,\n  };\n};\nexport default connect(mapStateToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}