{"ast":null,"code":"import axios from 'axios';\nimport baseURL from '../constants/baseURL';\nimport { store } from '../store';\nimport { SET_USER, SET_USER_UPDATE } from '../constants/actionTypes';\nimport history from '../constants/history';\nexport const dispatchSignupData = data => {\n  return {\n    type: SET_USER,\n    data\n  };\n};\nexport const register = data => {\n  const username = data.username,\n        email = data.email,\n        password = data.password;\n  return dispatch => {\n    return axios.post(\"\".concat(baseURL, \"/users\"), {\n      user: {\n        username: username,\n        email: email,\n        password: password\n      }\n    }).then(response => {\n      localStorage.setItem('jwt', response.data.user.token);\n      dispatch(dispatchSignupData(response.data.user));\n      history.push('/');\n    }).catch(() => {});\n  };\n};\nexport const dispatchLoginInfo = data => {\n  return {\n    type: SET_USER,\n    data\n  };\n};\nexport const login = data => {\n  const username = data.username,\n        password = data.password;\n  return dispatch => {\n    return axios.post(\"\".concat(baseURL, \"/users/login\"), {\n      user: {\n        email: username,\n        password: password\n      }\n    }).then(response => {\n      localStorage.setItem('jwt', response.data.user.token);\n      dispatch(dispatchLoginInfo(response.data.user));\n      history.push('/');\n    }).catch(err => {\n      throw err;\n    });\n  };\n};\nexport const logout = data => {\n  window.localStorage.removeItem('jwt');\n  window.localStorage.removeItem('persist:root');\n  history.push('/');\n};\nexport const setUserUpdate = data => {\n  return {\n    type: SET_USER_UPDATE,\n    data\n  };\n};\nexport const updateUser = data => {\n  let user = Object.assign({}, data);\n  return dispatch => {\n    let config = {\n      headers: {\n        Authorization: \"Token \".concat(store.getState().auth.currentUser.token)\n      }\n    };\n    return axios.put(\"\".concat(baseURL, \"/user\"), {\n      user\n    }, config).then(res => {\n      dispatch(setUserUpdate(res.data.user));\n      user.hasOwnProperty('password') ? logout() : history.push('/');\n    }).catch(err => {\n      throw err;\n    });\n  };\n};","map":{"version":3,"sources":["/home/jelly/Desktop/conduit_clone/src/actions/auth.js"],"names":["axios","baseURL","store","SET_USER","SET_USER_UPDATE","history","dispatchSignupData","data","type","register","username","email","password","dispatch","post","user","then","response","localStorage","setItem","token","push","catch","dispatchLoginInfo","login","err","logout","window","removeItem","setUserUpdate","updateUser","Object","assign","config","headers","Authorization","getState","auth","currentUser","put","res","hasOwnProperty"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport baseURL from '../constants/baseURL';\nimport { store } from '../store';\nimport { SET_USER, SET_USER_UPDATE } from '../constants/actionTypes';\nimport history from '../constants/history';\nexport const dispatchSignupData = data => {\n  return {\n    type: SET_USER,\n    data,\n  };\n};\nexport const register = data => {\n  const { username, email, password } = data;\n  return dispatch => {\n    return axios\n      .post(`${baseURL}/users`, {\n        user: {\n          username: username,\n          email: email,\n          password: password,\n        },\n      })\n      .then(response => {\n        localStorage.setItem('jwt', response.data.user.token);\n        dispatch(dispatchSignupData(response.data.user));\n        history.push('/');\n      })\n      .catch(() => {});\n  };\n};\nexport const dispatchLoginInfo = data => {\n  return {\n    type: SET_USER,\n    data,\n  };\n};\nexport const login = data => {\n  const { username, password } = data;\n  return dispatch => {\n    return axios\n      .post(`${baseURL}/users/login`, {\n        user: {\n          email: username,\n          password: password,\n        },\n      })\n      .then(response => {\n        localStorage.setItem('jwt', response.data.user.token);\n        dispatch(dispatchLoginInfo(response.data.user));\n        history.push('/');\n      })\n      .catch(err => {\n        throw err;\n      });\n  };\n};\nexport const logout = data => {\n  window.localStorage.removeItem('jwt');\n  window.localStorage.removeItem('persist:root');\n  history.push('/');\n};\nexport const setUserUpdate = data => {\n  return {\n    type: SET_USER_UPDATE,\n    data,\n  };\n};\nexport const updateUser = data => {\n  let user = Object.assign({}, data);\n  return dispatch => {\n    let config = {\n      headers: {\n        Authorization: `Token ${store.getState().auth.currentUser.token}`,\n      },\n    };\n    return axios\n      .put(\n        `${baseURL}/user`,\n        {\n          user,\n        },\n        config,\n      )\n      .then(res => {\n        dispatch(setUserUpdate(res.data.user));\n        user.hasOwnProperty('password') ? logout() : history.push('/');\n      })\n      .catch(err => {\n        throw err;\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}