{"ast":null,"code":"import _slicedToArray from \"/home/jelly/Desktop/conduit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jelly/Desktop/conduit_clone/src/components/Article/CommentSection.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CommentComposer from './CommentComposer';\nimport Comments from './Comments';\nimport { getCommentsByArticle, postComment, removeComment } from '../../actions/comments';\n\nconst CommentSection = props => {\n  const article = props.article,\n        currentUser = props.currentUser;\n\n  const handleSubmit = values => {\n    return postComment(article.slug, values.comment).then(res => {\n      setComments([res, ...comments]);\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const onClick = (articleID, commentID) => {\n    removeComment(articleID, commentID).then(res => {\n      let updatedComments = comments.filter(comment => comment.id !== res);\n      setComments(updatedComments);\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        comments = _useState2[0],\n        setComments = _useState2[1];\n\n  useEffect(() => {\n    if (article) {\n      getCommentsByArticle(article.slug).then(res => {\n        setComments(res);\n      }).catch(err => {\n        throw err;\n      });\n    }\n  }, [article.slug, article]);\n  return comments && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, currentUser ? React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-xs-12 col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(CommentComposer, {\n    handleSubmit: handleSubmit,\n    article: article,\n    currentUser: currentUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(Comments, {\n    comments: comments,\n    article: article,\n    currentUser: currentUser,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-xs-12 col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Sign in\"), \" or\", ' ', React.createElement(Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \" sign up \"), \" to add comments on this article.\"), React.createElement(Comments, {\n    article: article,\n    comments: comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))));\n};\n\nexport default connect()(CommentSection);","map":{"version":3,"sources":["/home/jelly/Desktop/conduit_clone/src/components/Article/CommentSection.js"],"names":["React","useState","useEffect","Link","connect","CommentComposer","Comments","getCommentsByArticle","postComment","removeComment","CommentSection","props","article","currentUser","handleSubmit","values","slug","comment","then","res","setComments","comments","catch","err","onClick","articleID","commentID","updatedComments","filter","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SACEC,oBADF,EAEEC,WAFF,EAGEC,aAHF,QAIO,wBAJP;;AAMA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA,QACtBC,OADsB,GACGD,KADH,CACtBC,OADsB;AAAA,QACbC,WADa,GACGF,KADH,CACbE,WADa;;AAE9B,QAAMC,YAAY,GAAGC,MAAM,IAAI;AAC7B,WAAOP,WAAW,CAACI,OAAO,CAACI,IAAT,EAAeD,MAAM,CAACE,OAAtB,CAAX,CACJC,IADI,CACCC,GAAG,IAAI;AACXC,MAAAA,WAAW,CAAC,CAACD,GAAD,EAAM,GAAGE,QAAT,CAAD,CAAX;AACD,KAHI,EAIJC,KAJI,CAIEC,GAAG,IAAI;AACZ,YAAMA,GAAN;AACD,KANI,CAAP;AAOD,GARD;;AASA,QAAMC,OAAO,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACxCjB,IAAAA,aAAa,CAACgB,SAAD,EAAYC,SAAZ,CAAb,CACGR,IADH,CACQC,GAAG,IAAI;AACX,UAAIQ,eAAe,GAAGN,QAAQ,CAACO,MAAT,CAAgBX,OAAO,IAAIA,OAAO,CAACY,EAAR,KAAeV,GAA1C,CAAtB;AACAC,MAAAA,WAAW,CAACO,eAAD,CAAX;AACD,KAJH,EAKGL,KALH,CAKSC,GAAG,IAAI;AACZ,YAAMA,GAAN;AACD,KAPH;AAQD,GATD;;AAX8B,oBAsBEtB,QAAQ,CAAC,EAAD,CAtBV;AAAA;AAAA,QAsBvBoB,QAtBuB;AAAA,QAsBbD,WAtBa;;AAwB9BlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,OAAJ,EAAa;AACXL,MAAAA,oBAAoB,CAACK,OAAO,CAACI,IAAT,CAApB,CACGE,IADH,CACQC,GAAG,IAAI;AACXC,QAAAA,WAAW,CAACD,GAAD,CAAX;AACD,OAHH,EAIGG,KAJH,CAISC,GAAG,IAAI;AACZ,cAAMA,GAAN;AACD,OANH;AAOD;AACF,GAVQ,EAUN,CAACX,OAAO,CAACI,IAAT,EAAeJ,OAAf,CAVM,CAAT;AAYA,SACES,QAAQ,IACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,WAAW,GACV;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,YAAY,EAAEC,YADhB;AAEE,IAAA,OAAO,EAAEF,OAFX;AAGE,IAAA,WAAW,EAAEC,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEQ,QADZ;AAEE,IAAA,OAAO,EAAET,OAFX;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,OAAO,EAAEW,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADU,GAmBV;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,SACsC,GADtC,EAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,sCADF,EAME,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEZ,OAAnB;AAA4B,IAAA,QAAQ,EAAES,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CApBJ,CAFJ;AAoCD,CAxED;;AAyEA,eAAejB,OAAO,GAAGM,cAAH,CAAtB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CommentComposer from './CommentComposer';\nimport Comments from './Comments';\nimport {\n  getCommentsByArticle,\n  postComment,\n  removeComment,\n} from '../../actions/comments';\n\nconst CommentSection = props => {\n  const { article, currentUser } = props;\n  const handleSubmit = values => {\n    return postComment(article.slug, values.comment)\n      .then(res => {\n        setComments([res, ...comments]);\n      })\n      .catch(err => {\n        throw err;\n      });\n  };\n  const onClick = (articleID, commentID) => {\n    removeComment(articleID, commentID)\n      .then(res => {\n        let updatedComments = comments.filter(comment => comment.id !== res);\n        setComments(updatedComments);\n      })\n      .catch(err => {\n        throw err;\n      });\n  };\n\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    if (article) {\n      getCommentsByArticle(article.slug)\n        .then(res => {\n          setComments(res);\n        })\n        .catch(err => {\n          throw err;\n        });\n    }\n  }, [article.slug, article]);\n\n  return (\n    comments && (\n      <div>\n        {currentUser ? (\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-md-8 offset-md-2\">\n              <div>\n                <CommentComposer\n                  handleSubmit={handleSubmit}\n                  article={article}\n                  currentUser={currentUser}\n                />\n              </div>\n              <Comments\n                comments={comments}\n                article={article}\n                currentUser={currentUser}\n                onClick={onClick}\n              />\n            </div>\n          </div>\n        ) : (\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-md-8 offset-md-2\">\n              <p>\n                <Link to=\"/login\">Sign in</Link> or{' '}\n                <Link to=\"/register\"> sign up </Link> to add comments on this\n                article.\n              </p>\n              <Comments article={article} comments={comments} />\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  );\n};\nexport default connect()(CommentSection);\n"]},"metadata":{},"sourceType":"module"}