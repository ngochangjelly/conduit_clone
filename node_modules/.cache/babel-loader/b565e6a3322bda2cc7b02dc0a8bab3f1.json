{"ast":null,"code":"import _slicedToArray from \"/home/jelly/Desktop/conduit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jelly/Desktop/conduit_clone/src/components/Home/Tags.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllTags } from '../../actions/tags';\nimport { getAllArticlesByTag } from '../../actions/articles';\nimport { store } from '../../store';\nimport { FETCHING, FETCH_ERROR, FETCH_OK } from '../../constants/fetchingStatus';\nexport const Tags = props => {\n  const tags = props.tags;\n\n  const _useState = useState(FETCHING),\n        _useState2 = _slicedToArray(_useState, 2),\n        fetchingStatus = _useState2[0],\n        setFetchingStatus = _useState2[1];\n\n  const tagsArray = Object.values(tags);\n  useEffect(() => {\n    store.dispatch(getAllTags()).then(() => {\n      setFetchingStatus(FETCH_OK);\n    }).catch(err => {\n      setFetchingStatus(FETCH_ERROR);\n      throw err;\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"overflow-auto relative px-4 py-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"px-2 text-gray-700 text-base font-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Popular tags\"), fetchingStatus === FETCHING && React.createElement(\"p\", {\n    className: \"text-gray-500 text-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Loading...\"), fetchingStatus === FETCH_ERROR && React.createElement(\"p\", {\n    className: \"text-gray-500 text-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Tags are failed to load !\"), fetchingStatus === FETCH_OK && tags.length === 0 && React.createElement(\"p\", {\n    className: \"text-gray-500 text-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"No tags yet !\"), tags && tagsArray.map((tag, index) => {\n    const handleClick = tag => {\n      store.dispatch(getAllArticlesByTag(tag));\n    };\n\n    return React.createElement(\"a\", {\n      onClick: e => handleClick(e),\n      key: index,\n      href: \"/\",\n      className: \"mx-1 my-1 inline-flex bg-gray-500 hover:bg-gray-600 text-white text-sm py-1 px-2 rounded-full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, tag);\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    tags: state.tags\n  };\n};\n\nexport default connect(mapStateToProps)(Tags);","map":{"version":3,"sources":["/home/jelly/Desktop/conduit_clone/src/components/Home/Tags.js"],"names":["React","useState","useEffect","connect","getAllTags","getAllArticlesByTag","store","FETCHING","FETCH_ERROR","FETCH_OK","Tags","props","tags","fetchingStatus","setFetchingStatus","tagsArray","Object","values","dispatch","then","catch","err","length","map","tag","index","handleClick","e","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,QAHF,QAIO,gCAJP;AAKA,OAAO,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,QACnBC,IADmB,GACVD,KADU,CACnBC,IADmB;;AAAA,oBAEiBX,QAAQ,CAACM,QAAD,CAFzB;AAAA;AAAA,QAEpBM,cAFoB;AAAA,QAEJC,iBAFI;;AAG3B,QAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcL,IAAd,CAAlB;AACAV,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CACFY,QADH,CACYd,UAAU,EADtB,EAEGe,IAFH,CAEQ,MAAM;AACVL,MAAAA,iBAAiB,CAACL,QAAD,CAAjB;AACD,KAJH,EAKGW,KALH,CAKSC,GAAG,IAAI;AACZP,MAAAA,iBAAiB,CAACN,WAAD,CAAjB;AACA,YAAMa,GAAN;AACD,KARH;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,SACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,wCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGGR,cAAc,KAAKN,QAAnB,IACC;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAMGM,cAAc,KAAKL,WAAnB,IACC;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAPJ,EASGK,cAAc,KAAKJ,QAAnB,IAA+BG,IAAI,CAACU,MAAL,KAAgB,CAA/C,IACC;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVJ,EAYGV,IAAI,IACHG,SAAS,CAACQ,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5B,UAAMC,WAAW,GAAGF,GAAG,IAAI;AACzBlB,MAAAA,KAAK,CAACY,QAAN,CAAeb,mBAAmB,CAACmB,GAAD,CAAlC;AACD,KAFD;;AAGA,WACE;AACE,MAAA,OAAO,EAAEG,CAAC,IAAID,WAAW,CAACC,CAAD,CAD3B;AAEE,MAAA,GAAG,EAAEF,KAFP;AAGE,MAAA,IAAI,EAAC,GAHP;AAIE,MAAA,SAAS,EAAC,+FAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGD,GANH,CADF;AAUD,GAdD,CAbJ,CADF;AA+BD,CA/CM;;AAiDP,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLjB,IAAAA,IAAI,EAAEiB,KAAK,CAACjB;AADP,GAAP;AAGD,CAJD;;AAKA,eAAeT,OAAO,CAACyB,eAAD,CAAP,CAAyBlB,IAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getAllTags } from '../../actions/tags';\nimport { getAllArticlesByTag } from '../../actions/articles';\nimport { store } from '../../store';\nimport {\n  FETCHING,\n  FETCH_ERROR,\n  FETCH_OK,\n} from '../../constants/fetchingStatus';\nexport const Tags = props => {\n  const { tags } = props;\n  const [fetchingStatus, setFetchingStatus] = useState(FETCHING);\n  const tagsArray = Object.values(tags);\n  useEffect(() => {\n    store\n      .dispatch(getAllTags())\n      .then(() => {\n        setFetchingStatus(FETCH_OK);\n      })\n      .catch(err => {\n        setFetchingStatus(FETCH_ERROR);\n        throw err;\n      });\n  }, []);\n\n  return (\n    <div className=\"overflow-auto relative px-4 py-4\">\n      <p className=\"px-2 text-gray-700 text-base font-bold\">Popular tags</p>\n\n      {fetchingStatus === FETCHING && (\n        <p className=\"text-gray-500 text-sm\">Loading...</p>\n      )}\n      {fetchingStatus === FETCH_ERROR && (\n        <p className=\"text-gray-500 text-sm\">Tags are failed to load !</p>\n      )}\n      {fetchingStatus === FETCH_OK && tags.length === 0 && (\n        <p className=\"text-gray-500 text-sm\">No tags yet !</p>\n      )}\n      {tags &&\n        tagsArray.map((tag, index) => {\n          const handleClick = tag => {\n            store.dispatch(getAllArticlesByTag(tag));\n          };\n          return (\n            <a\n              onClick={e => handleClick(e)}\n              key={index}\n              href=\"/\"\n              className=\"mx-1 my-1 inline-flex bg-gray-500 hover:bg-gray-600 text-white text-sm py-1 px-2 rounded-full\"\n            >\n              {tag}\n            </a>\n          );\n        })}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    tags: state.tags,\n  };\n};\nexport default connect(mapStateToProps)(Tags);\n"]},"metadata":{},"sourceType":"module"}