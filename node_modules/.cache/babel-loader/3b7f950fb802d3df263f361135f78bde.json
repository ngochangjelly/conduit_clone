{"ast":null,"code":"import _slicedToArray from \"/home/jelly/Desktop/conduit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jelly/Desktop/conduit_clone/src/components/Article/index.js\";\nimport { connect } from 'react-redux';\nimport React, { useState, useEffect } from 'react';\nimport CommentSection from './CommentSection';\nimport ArticleDetail from './ArticleDetail';\nimport { getArticleByID } from '../../actions/articles';\n\nconst Article = props => {\n  const id = props.match.params.id;\n  const currentUser = props.currentUser;\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        article = _useState2[0],\n        setArticle = _useState2[1];\n\n  useEffect(() => {\n    getArticleByID(id).then(res => {\n      setArticle(res);\n    }).catch(err => {\n      setArticle({});\n      throw err;\n    });\n  }, [id]);\n  return article && React.createElement(\"div\", {\n    className: \"article-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, article.title), React.createElement(ArticleDetail, {\n    article: article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"container page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row article-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, article.body, React.createElement(\"div\", {\n    className: \"col-xs-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"tag-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, article.tagList && article.tagList.map((tag, key) => {\n    return React.createElement(\"li\", {\n      className: \"tag-default tag-pill tag-outline\",\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, tag);\n  })))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"article-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(CommentSection, {\n    article: article,\n    currentUser: currentUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(Article);","map":{"version":3,"sources":["/home/jelly/Desktop/conduit_clone/src/components/Article/index.js"],"names":["connect","React","useState","useEffect","CommentSection","ArticleDetail","getArticleByID","Article","props","id","match","params","currentUser","article","setArticle","then","res","catch","err","title","body","tagList","map","tag","key","mapStateToProps","state","auth"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,wBAA/B;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA,QACfC,EADe,GACRD,KAAK,CAACE,KAAN,CAAYC,MADJ,CACfF,EADe;AAAA,QAEfG,WAFe,GAECJ,KAFD,CAEfI,WAFe;;AAAA,oBAIOV,QAAQ,CAAC,EAAD,CAJf;AAAA;AAAA,QAIhBW,OAJgB;AAAA,QAIPC,UAJO;;AAKvBX,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,cAAc,CAACG,EAAD,CAAd,CACGM,IADH,CACQC,GAAG,IAAI;AACXF,MAAAA,UAAU,CAACE,GAAD,CAAV;AACD,KAHH,EAIGC,KAJH,CAISC,GAAG,IAAI;AACZJ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA,YAAMI,GAAN;AACD,KAPH;AAQD,GATQ,EASN,CAACT,EAAD,CATM,CAAT;AAUA,SACEI,OAAO,IACL;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAACM,KAAb,CADF,EAEE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEN,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACO,IADX,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,OAAO,CAACQ,OAAR,IACCR,OAAO,CAACQ,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChC,WACE;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,GAAG,EAAED,GAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,GAJH,CADF;AAQD,GATD,CAFJ,CADF,CAFF,CADF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EAoBE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EAqBE,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEV,OAAzB;AAAkC,IAAA,WAAW,EAAED,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CAPF,CAFJ;AAmCD,CAlDD;;AAmDA,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLd,IAAAA,WAAW,EAAEc,KAAK,CAACC,IAAN,CAAWf;AADnB,GAAP;AAGD,CAJD;;AAMA,eAAeZ,OAAO,CAACyB,eAAD,CAAP,CAAyBlB,OAAzB,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport React, { useState, useEffect } from 'react';\n\nimport CommentSection from './CommentSection';\nimport ArticleDetail from './ArticleDetail';\nimport { getArticleByID } from '../../actions/articles';\n\nconst Article = props => {\n  const { id } = props.match.params;\n  const { currentUser } = props;\n\n  const [article, setArticle] = useState({});\n  useEffect(() => {\n    getArticleByID(id)\n      .then(res => {\n        setArticle(res);\n      })\n      .catch(err => {\n        setArticle({});\n        throw err;\n      });\n  }, [id]);\n  return (\n    article && (\n      <div className=\"article-page\">\n        <div className=\"banner\">\n          <div className=\"container\">\n            <h1>{article.title}</h1>\n            <ArticleDetail article={article} />\n          </div>\n        </div>\n        <div className=\"container page\">\n          <div className=\"row article-content\">\n            {article.body}\n            <div className=\"col-xs-12\">\n              <ul className=\"tag-list\">\n                {article.tagList &&\n                  article.tagList.map((tag, key) => {\n                    return (\n                      <li\n                        className=\"tag-default tag-pill tag-outline\"\n                        key={tag}\n                      >\n                        {tag}\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n          <hr />\n          <div className=\"article-actions\" />\n          <CommentSection article={article} currentUser={currentUser} />\n        </div>\n      </div>\n    )\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser,\n  };\n};\n\nexport default connect(mapStateToProps)(Article);\n"]},"metadata":{},"sourceType":"module"}